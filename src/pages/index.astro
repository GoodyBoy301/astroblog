---
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../config';

const posts = (await Astro.glob('./journal/*.{md,mdx}')).sort(
	(a, b) => new Date(b.frontmatter.pubDate).valueOf() - new Date(a.frontmatter.pubDate).valueOf()
);

const tags = ["POEM", "RANT", "CDC", "DEBATE", "COMEDY"];
---

<!DOCTYPE html>
<html lang="en">
	<head>
		<BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
	<style>	
		section ul li{
			padding-bottom: 30px;
		}
		ul {
			margin: 0 -20px 0;
			padding: 20px;
			list-style-type: none;
		}
		li {
			margin: 30px 0 10px 0;
		}
		.title {
			font-size: 2em;
			color: var(--blue);
			font-family: 'Covered by your grace';
		}
		.title:hover {
			border: 0;
		}
		.small {
			font-size: xx-small;
		}
		.banner {
			width: 100%; 
			height: 350px; 
			object-fit: cover;
			object-position: 25% 25%; 
		}
		.txt {
			font-size: smaller;
		}
		.txt a {
			border: 0;
		}
	</style>
	</head>
	<body>
		<Header />
		<main>
			<section>
				<ul>
					<p class="mono small">FEATURED TAGS</p>
					<ul class="tags mono small" id="tagSelect">
						{tags.map(tag => <li>{tag}</li>)}
					</ul>
					{
						posts.map((post) => (
							<li data-tags={post.frontmatter.tags}>
								<img class="banner" src={post.frontmatter.heroImage} alt="Image for this post" loading="lazy"><br/>
								<ul class="tags mono small">{post.frontmatter.tags.split(",").map((tag: unknown) => <li>{tag}</li>)}</ul>
								<time class="small mono" datetime={post.frontmatter.pubDate}>
									{new Date(post.frontmatter.pubDate).toLocaleDateString('en-us', {
										year: 'numeric',
										day: 'numeric',
										month: 'long',
									})}
								</time><br/><br/>
								<a class="title" href={post.url}>{post.frontmatter.title}</a><br/>
								<p class="txt">{post.frontmatter.description}</p>
								<p class="txt"><a href={post.url}>Read more â†’</a></p>
							</li>
						))
					}
				</ul>
			</section>
		</main>
		<Footer />
	</body>
<script>
import { atom } from 'nanostores'

const filteredTopics = atom<string[]>([])

document.querySelectorAll<HTMLLIElement>("ul.tags li").forEach((tag) => {

tag.addEventListener("click", () => {
	if (filteredTopics.get().includes(tag.innerText)) {
		filteredTopics.set(filteredTopics.get().filter(x => x!=tag.innerText))
	} else {
		filteredTopics.set([...filteredTopics.get(), tag.innerText])
		}
	})

	filteredTopics.subscribe((newFilteredTopics) => {
		tag.classList.toggle("selected", newFilteredTopics.includes(tag.innerText))
	})
})

document.querySelectorAll<HTMLLIElement>("li[data-tags]").forEach(article => {
	filteredTopics.subscribe((newFilteredTopics) => {
		if (newFilteredTopics.length == 0) {
			article.style.display = "block"
			return
		} 
		article.style.display = newFilteredTopics.some(f => article.dataset.tags?.includes(f)) ? "block":"none"
	})
});
</script>
</html>